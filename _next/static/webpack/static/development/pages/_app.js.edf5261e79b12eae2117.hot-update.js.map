{"version":3,"file":"static/webpack/static/development/pages/_app.js.edf5261e79b12eae2117.hot-update.js","sources":["webpack:///./components/Sidebar.js"],"sourcesContent":["import Link from 'next/link';\nimport Button from '@react/react-spectrum/Button';\nimport ShowMenu from '@react/react-spectrum/Icon/ShowMenu';\nimport { SideNav, SideNavItem } from '@react/react-spectrum/SideNav';\nimport Router from 'next/router';\nimport classNames from 'classnames';\nimport menuData from '../data/newmenu';\nimport styles from './css/sidebar.scss';\nimport SiteSearch from './SiteSearch';\nimport getConfig from 'next/config';\nimport {withRouter} from 'next/router'\n\nconst createLinkProps = (item) => {\n  if(item.linkType === 'External') {\n    return { href: item.url }\n  }\n  if(item.parent.split(',').includes('Components')){\n    return {href: `/components/id?id=${item.url}`, as: `${process.env.BACKEND_URL}/components/${item.url}`}\n  }\n  return { href: `/${item.url}`, as: `${process.env.BACKEND_URL}/${item.url}`}\n}\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectedItem = React.createRef();\n    this.state = {\n      menuOpen:false,\n    }\n  }\n\n  openMenu = () => {\n    this.setState({\n      menuOpen: true\n    })\n  }\n  closeMenu = () => {\n    this.setState({\n      menuOpen: false\n    })\n  }\n\n  render() {\n    return (\n    <>\n    <div\n      className={classNames(styles.overlay, this.state.menuOpen?styles.menuOpen:styles.menuClosed)}\n      onClick={()=>this.closeMenu()}/>\n    <div className={styles.appHeader}>\n      <Button variant=\"tool\" icon={<ShowMenu />} aria-label=\"Show\" onClick={() => this.openMenu()} />\n    </div>\n    <div className={classNames(styles.sideBar, this.state.menuOpen?styles.menuOpen:styles.menuClosed)}>\n    <div className={classNames(styles.spectrumSidebar)}>\n        <div className={styles.header}>\n          <Link href=\"/\" as={`${process.env.BACKEND_URL}/`}>\n            <a>\n              <img src={`${process.env.BACKEND_URL}/static/logo.png`} alt=\"Spectrum Logo\" srcSet={`${process.env.BACKEND_URL}/static/logo@2x.png 2x`} className={styles.logo}/>\n            </a>\n          </Link>\n          <SiteSearch/>\n        </div>\n        <div className={styles.navigation}>\n          <SideNav defaultValue={this.props.router.query.id} style={{width: '200px', marginBottom:80}} variant=\"multiLevel\">\n            {menuData.menu[0].children.map((item, i)=>{\n              if(!item.children || item.children.length == 0) {\n                return (\n                  <SideNavItem value={item.url} label={item.title} key={i}\n                    style={{width: '200px'}}\n                    ref={item.url === this.props.router.query.id? this.selectedItem : undefined}\n                    renderLink={(props) => {\n                      delete props.href\n                      return(<Link {...createLinkProps(item)}>\n                        <a {...props}>{item.title}</a>\n                      </Link>)\n                    }}\n                  />\n                )\n              } else {\n                console.log({url: item.url, routerId: this.props.router})\n                return (\n                  <SideNavItem value={item.url} label={item.title} key={i}\n                    defaultExpanded={false}\n                    style={{width: '200px'}}>\n                    {item.children && item.children.map((childItem, childI) => {\n                      return (\n                        <SideNavItem value={childItem.url} label={childItem.title} key={childI}\n                          style={{width: '200px'}}\n                          ref={childItem.url === this.props.router.query.id? this.selectedItem : undefined}\n                          renderLink={(props) => {\n                            delete props.href\n                            return(<Link {...createLinkProps(childItem)}>\n                              <a {...props}>{childItem.title}</a>\n                            </Link>)\n                          }}\n                        />\n                      )\n                    })}\n                  </SideNavItem>\n                )\n              }\n\n            }) }\n            </SideNav>\n            <SideNav style={{width: '200px', marginBottom:'40px'}}>\n                <SideNavItem value=\"Spectrum\" target=\"_blank\" href=\"#\" style={{width: '200px'}}>Spectrum</SideNavItem>\n            </SideNav>\n        </div>\n        </div>\n    </div>\n    </>\n    )\n    }\n\n}\n// return(\n//   <CustomNavItem item={item} index={i} pageSlug={this.props.router.query.id} selectedRef={this.selectedItem}/>\n// )\nexport default withRouter(Sidebar)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AADA;AAGA;AACA;AAdA;AAeA;AACA;AADA;AAGA;AACA;AAhBA;AACA;AACA;AADA;AAJA;AAOA;AACA;;;AAYA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAGA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA1FA;AA8FA;AACA;AACA;AACA;AADA;;;;A","sourceRoot":""}