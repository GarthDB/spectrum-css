{"version":3,"file":"static/webpack/static/development/pages/_app.js.bc7671bbecd92e523a06.hot-update.js","sources":["webpack:///./components/SiteSearch.js"],"sourcesContent":["import Search from \"@react/react-spectrum/Search\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport classNames from \"classnames\";\nimport styles from \"./css/siteSearch.scss\";\nimport lunr from \"lunr\";\nimport search_store from \"../data/search_store\";\nimport search_index from \"../data/search_index\";\n\n\nclass SiteSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n      results: [],\n      usageGuidelines: [],\n      components: [],\n      foundation: [],\n      files: [],\n      behaviors: [],\n      contributions: [],\n      resources: [],\n      tutorials: [],\n      searchVal: \"\",\n      numResults: 0,\n      kbSelectedIndex: 0,\n      kbSelectedLink: undefined,\n      kbSelectedType: undefined,\n      searchIndex: undefined,\n      searchLoaded: true\n    };\n\n    this.searchContainer = React.createRef();\n\n    //const res = await fetch(`${publicRuntimeConfig.API}/getSearchIndex`)\n    //const data = await res.json();\n\n    this.idx = lunr.Index.load(search_index);\n    //this.setState({searchIndex: data});\n  }\n\n  resetSearch = () => {\n    this.setState({\n      menuOpen: false,\n      results: [],\n      usageGuidelines: [],\n      components: [],\n      foundation: [],\n      files: [],\n      behaviors: [],\n      contributions: [],\n      resources: [],\n      tutorials: [],\n      searchVal: \"\",\n      numResults: 0,\n      kbSelectedIndex: 0,\n      kbSelectedLink: undefined,\n      kbSelectedType: undefined\n    });\n  };\n\n  focusOnSearchItem = index => {\n    this.setState({\n      kbSelectedIndex: index\n    });\n\n    let searchEl = document.getElementById(`${index}_search`);\n    if (searchEl) {\n      searchEl.focus();\n    }\n  };\n\n  handleSearchKeyPress = e => {\n    if (this.state.numResults !== 0) {\n      switch (e.key) {\n        case \"Enter\":\n          if (this.state.numResults !== 0) {\n            // Navigate to the first search result\n            let searchEl = document.getElementById('0_search');\n            searchEl.click();\n          }\n          break;\n        case \"Tab\":\n        case \"ArrowDown\":\n            this.openMenu();\n            this.focusOnSearchItem(0);\n            e.preventDefault();\n          break;\n      }\n    }\n  };\n\n  handleKeyPress = e => {\n    if (this.state.menuOpen) {\n      let index;\n      switch (e.key) {\n        case \"ArrowDown\":\n          index = this.state.kbSelectedIndex == this.state.numResults - 1\n            ? 0\n            : this.state.kbSelectedIndex + 1;\n\n          this.focusOnSearchItem(index);\n\n          e.preventDefault();\n          break;\n        case \"ArrowUp\":\n          index = this.state.kbSelectedIndex == 0\n            ? this.state.numResults - 1\n            : this.state.kbSelectedIndex - 1;\n\n          this.focusOnSearchItem(index);\n\n          e.preventDefault();\n          break;\n        case \"Home\":\n          this.focusOnSearchItem(0);\n\n          e.preventDefault();\n          break;\n        case \"End\":\n          this.focusOnSearchItem(this.state.numResults - 1);\n\n          e.preventDefault();\n          break;\n        case \"Tab\":\n          if (e.shiftKey && this.state.kbSelectedIndex == 0) {\n            e.preventDefault();\n            this.focusOnSearch();\n          }\n          break;\n        case \"Escape\":\n          this.focusOnSearch()\n          this.closeMenu();\n\n          e.preventDefault();\n          break;\n      }\n    }\n  };\n\n  focusOnSearch = () => {\n    let field = this.searchContainer.current.querySelector('.spectrum-Search-input');\n    if (field) {\n      field.focus();\n    }\n\n    this.setState({\n      kbSelectedIndex: -1\n    });\n  };\n\n  getHREF = (slug, type, query) => {\n    let q = query ? `#${query.replace(/ /g, \"-\")}` : \"#\";\n    if (type === \"Internal\") {\n      return `/page/${slug}${q}`;\n    }\n    return slug;\n  };\n\n  search = val => {\n    this.setState({\n      searchVal: val\n    });\n    let usageGuidelines = [];\n    let components = [];\n    let foundation = [];\n    let behaviors = [];\n    let files = [];\n    let contributions = [];\n    let resources = [];\n    let tutorials = [];\n\n    let r = [];\n    if (val.length > 2) {\n      let searchParam = `${val.trim()} ${val.trim()}*`;\n\n      r = this.idx.search(searchParam + \"*\");\n    }\n    let length = 0;\n    r.forEach((item, i) => {\n      let storeItem = search_store[item.ref];\n      if (storeItem.type == \"usageGuideline\") {\n        length++;\n        usageGuidelines.push(storeItem);\n      } else if (\n        storeItem.type === \"page\" &&\n        storeItem.pageType === \"Component\"\n      ) {\n        length++;\n        components.push(storeItem);\n      } else if (storeItem.type === \"Behavior\") {\n        length++;\n        behaviors.push(storeItem);\n      } else if (\n        storeItem.type === \"page\" &&\n        storeItem.pageType === \"Foundation\"\n      ) {\n        length++;\n        foundation.push(storeItem);\n      } else if (\n        storeItem.type === \"page\" &&\n        storeItem.pageType === \"Resources\"\n      ) {\n        length++;\n        resources.push(storeItem);\n      } else if (storeItem.type === \"Tutorial\") {\n        length++;\n        tutorials.push(storeItem);\n      } else if (storeItem.type === \"xd\") {\n        length++;\n        files.push(storeItem);\n      } else if (storeItem.type === \"contribution\") {\n        length++;\n        contributions.push(storeItem);\n      }\n    });\n    this.setState({\n      results: r,\n      usageGuidelines: usageGuidelines,\n      components: components,\n      behaviors: behaviors,\n      foundation: foundation,\n      files: files,\n      contributions: contributions,\n      resources: resources,\n      tutorials: tutorials,\n      numResults: length\n    });\n  };\n\n  closeMenu = e => {\n    setTimeout(\n      function() {\n        this.setState({\n          menuOpen: false,\n          kbSelectedIndex: 0\n        });\n\n        // Workaround: React Spectrum incorrectly assigns this attribute to the <input>, it should be on the outer <div>\n        let searchComponent = this.searchContainer.current.querySelector('.spectrum-Search');\n        searchComponent.setAttribute('aria-expanded', 'false');\n      }.bind(this),\n      100\n    );\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n\n    // Workaround: React Spectrum incorrectly assigns this attribute to the <input>, it should be on the outer <div>\n    let searchComponent = this.searchContainer.current.querySelector('.spectrum-Search');\n    searchComponent.setAttribute('aria-expanded', 'true');\n  };\n\n  getHighlighted = (index) => {\n    if (index === this.state.kbSelectedIndex) {\n      return styles['is-highlighted'];\n    }\n  };\n\n  componentDidMount = () => {\n    // Workaround: React Spectrum incorrectly assigns the following attributes to the <input>, they should be on the outer <div>\n    let searchComponent = this.searchContainer.current.querySelector('.spectrum-Search');\n    searchComponent.setAttribute('aria-haspopup', 'listbox');\n    searchComponent.setAttribute('aria-owns', 'search-results-listbox');\n    searchComponent.setAttribute('aria-expanded', 'false');\n\n    // Workaround: React Spectrum incorrectly assigns searchbox here, it needs to be textbox or aXe has a conniption\n    let searchInput = this.searchContainer.current.querySelector('.spectrum-Search-input');\n    searchInput.setAttribute('role', 'textbox');\n    searchInput.setAttribute('type', 'text');\n  };\n\n  render() {\n    let searchIndex = -1;\n    return (\n      <div\n        className={styles.searchContainer}\n        ref={this.searchContainer}\n        role=\"search\"\n      >\n        <div className={styles.overlay}></div>\n        <Search\n          role=\"combobox\"\n          aria-autocomplete=\"list\"\n          aria-label=\"Search\"\n          placeholder=\"Search\"\n          defaultValue=\"\"\n          value={this.state.searchVal}\n          style={{ width: \"100%\" }}\n          onChange={e => {\n            this.search(e);\n            this.openMenu();\n          }}\n          onFocus={e => {\n            this.openMenu();\n          }}\n          onKeyDown={e => {\n            this.handleSearchKeyPress(e);\n          }}\n          disabled={!this.state.searchLoaded}\n        />\n        <div\n          onClick={e => {\n            this.closeMenu();\n          }}\n          className={classNames(\n            styles.overlay,\n            this.state.menuOpen && this.state.searchVal.length > 2\n              ? styles.overlayOpen\n              : undefined\n          )}\n        ></div>\n        <div\n          className={classNames(\n            styles.results,\n            this.state.menuOpen && this.state.searchVal.length > 2\n              ? styles.open\n              : undefined\n          )}\n         onKeyDown={this.handleKeyPress}\n         id=\"search-results-listbox\"\n         role=\"listbox\"\n         aria-label=\"Search\"\n        >\n          {this.state.numResults === 0 ? (\n            <div className={styles.noResultsContainer}>\n              <div\n                className={classNames(\n                  \"spectrum-Heading2--quiet\",\n                  styles.noResults\n                )}\n              >\n                No results found\n              </div>\n              <div className={classNames(\"spectrum-Body4\", styles.noResulsSub)}>\n                <em>Try another search term.</em>\n              </div>\n            </div>\n          ) : (\n            undefined\n          )}\n          {this.state.foundation.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Foundation\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Foundation\">Foundation</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.foundation.map((result, i) => (\n                  <li key={i} role=\"presentation\">\n                    <a\n                      role=\"option\"\n                      id={`${++searchIndex}_search`}\n                      className={classNames(\n                        \"spectrum-Body4\",\n                        styles.listItem,\n                        this.getHighlighted(searchIndex)\n                      )}\n                      href={this.getHREF(result.slug, \"Internal\")}\n                    >\n                      {result.name}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n          {this.state.components.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Components\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Components\">Components</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.components.map((result, i) => (\n                  <li key={i} role=\"presentation\">\n                    <Link href={`/components/id?id=${esult.slug}`}\n                      as={`${process.env.BACKEND_URL}/components/${esult.slug}`}>\n                      <a role=\"option\"\n                        id={`${++searchIndex}_search`}\n                        className={classNames(\n                          \"spectrum-Body4\",\n                          styles.listItem,\n                          this.getHighlighted(searchIndex)\n                        )}>\n                        {result.name}\n                      </a>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n\n          {this.state.resources.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Resources\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Resources\">Resources</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.resources.map((result, i) => (\n                  <li key={i} role=\"presentation\"><a\n                    role=\"option\"\n                    id={`${++searchIndex}_search`}\n                    className={classNames(\n                      \"spectrum-Body4\",\n                      styles.listItem,\n                      this.getHighlighted(searchIndex)\n                    )}\n                    href={this.getHREF(result.slug, \"Internal\")}\n                  >\n                    {result.name}\n                  </a></li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n          {this.state.usageGuidelines.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_UsageGuidelines\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_UsageGuidelines\">Usage Guidelines</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.usageGuidelines.map((result, i) => (\n                  <li key={i} role=\"presentation\"><a\n                    role=\"option\"\n                    id={`${++searchIndex}_search`}\n                    className={classNames(\n                      \"spectrum-Body4\",\n                      styles.listItem,\n                      this.getHighlighted(searchIndex)\n                    )}\n                    href={this.getHREF(result.slug, \"Internal\", result.query)}\n                  >\n                    <div\n                      className={classNames(\"spectrum-Body5\", styles.subHeader)}\n                    >\n                      {result.pageType} <span aria-hidden=\"true\">&gt;</span> {result.name}\n                    </div>\n                    <div>{result.display_description}</div>\n                  </a></li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n\n          {this.state.behaviors.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Behaviors\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Behaviors\">Behaviors</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.behaviors.map((result, i) => (\n                  <li key={i} role=\"presentation\"><a\n                    role=\"option\"\n                    id={`${++searchIndex}_search`}\n                    className={classNames(\n                      \"spectrum-Body4\",\n                      styles.listItem,\n                      this.getHighlighted(searchIndex)\n                    )}\n                    href={this.getHREF(result.slug, \"Internal\", result.query)}\n                  >\n                    <div\n                      className={classNames(\"spectrum-Body5\", styles.subHeader)}\n                    >\n                      {result.pageType} <span aria-hidden=\"true\">&gt;</span> {result.name}\n                    </div>\n                    <div>{result.display_description}</div>\n                  </a></li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n\n          {this.state.files.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Downloads\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Downloads\">Downloads</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.files.map((result, i) => (\n                  <li key={i} role=\"presentation\"><a\n                    role=\"option\"\n                    id={`${++searchIndex}_search`}\n                    className={classNames(\n                      \"spectrum-Body4\",\n                      styles.listItem,\n                      this.getHighlighted(searchIndex)\n                    )}\n                    target=\"_blank\"\n                    href={this.getHREF(`/static/resources/Latest/${result.slug}`, \"File\")}\n                  >\n                    <div className={styles.file}>\n                      <div className={styles.icon}>\n                        <img src=\"/static/icon_xd_small@2x.png\" alt=\"XD File\" />\n                      </div>\n                      {result.slug}\n                    </div>\n                  </a></li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n          {this.state.tutorials.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Tutorials\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Tutorials\">Tutorials</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.tutorials.map((result, i) => (\n                  <li key={i} role=\"presentation\"><a\n                    role=\"option\"\n                    id={`${++searchIndex}_search`}\n                    className={classNames(\n                      \"spectrum-Body4\",\n                      styles.listItem,\n                      this.getHighlighted(searchIndex)\n                    )}\n                    target=\"_blank\"\n                    onClick={this.getHREF(result.slug, \"External\")}\n                  >\n                    {result.name}\n                  </a></li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n          {this.state.contributions.length ? (\n            <div className={styles.resultContainer} role=\"group\" aria-labelledby=\"results_Contributions\">\n              <div className={styles.header} role=\"presentation\">\n                <h4 className=\"spectrum-Heading--subtitle3\" aria-hidden=\"true\" id=\"results_Contributions\">Contributions</h4>\n              </div>\n              <ul className={styles.resultSet} role=\"presentation\">\n                {this.state.contributions.map((result, i) => (\n                  <li key={i} role=\"presentation\"><a\n                    role=\"option\"\n                    id={`${++searchIndex}_search`}\n                    className={classNames(\n                      \"spectrum-Body4\",\n                      styles.listItem,\n                      this.getHighlighted(searchIndex)\n                    )}\n                    target=\"_blank\"\n                    href={this.getHREF(\n                      `https://spectrum-contributions.corp.adobe.com/submissions/${result.slug}`,\n                      \"External\"\n                    )}\n                  >\n                    <div>{result.description}</div>\n                  </a></li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            undefined\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SiteSearch;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AAlDA;AAoDA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AA7DA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AAjFA;AAmFA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAxCA;AA0CA;AACA;AACA;AAjIA;AAmIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AA5IA;AA8IA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApJA;AAsJA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AA3NA;AA6NA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAGA;AACA;AA3OA;A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","sourceRoot":""}