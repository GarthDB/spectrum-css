{"version":3,"file":"static/webpack/static/development/pages/components/id.js.a5f7ea9b4ce74fd13764.hot-update.js","sources":["webpack:///./pages/components/id.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from \"next/router\";\nimport Highlight from 'react-highlight.js';\nimport classNames from \"classnames\";\nimport {Helmet} from \"react-helmet\";\n\nimport Link from '@react/react-spectrum/Link';\nimport Markdown from '../../components/Markdown';\nimport PageHeader from '../../components/PageHeader';\nimport ResourceCard from '../../components/ResourceCard';\nimport Section from '../../components/Section';\nimport Status from '../../components/Status';\nimport StatusLight from '@react/react-spectrum/StatusLight';\nimport SubHeader from '../../components/SubHeader';\nimport '../../css/hljs.scss';\nimport styles from '../../components/css/page.scss';\nimport compStyles from '../../components/css/componentPage.scss';\n\nasync function loadData(id) {\n  let data = await import(`../../data/yml/${id}.yml`);\n  return data;\n}\nclass Markup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clickHander = this.clickHander.bind(this);\n    this.state = {\n      openFlag: false\n    };\n  }\n  clickHander(e) {\n    this.setState((state, props) => {\n      return {\n        openFlag: !state.openFlag\n      }\n    });\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div className={compStyles.markup}>\n        <Highlight language=\"html\" className={classNames('spectrum-Code4', compStyles.markupPre, {'is-open': this.state.openFlag})}>\n          {this.props.children}\n        </Highlight>\n        <Link className={compStyles.toggle} href=\"#\" onClick={this.clickHander}>{ !this.state.openFlag ? ('Show markup') : ('Hide markup')}</Link>\n      </div>\n    );\n  }\n}\n\nclass Variant extends React.Component {\n  render() {\n    return (\n      <article>\n        <SubHeader title={this.props.example.name}>\n          <Status className={compStyles.subHeadStatusLight} status={this.props.example.status}/>\n        </SubHeader>\n        { this.props.example.description ? (\n          <Markdown source={this.props.example.description}/>\n        ) : undefined }\n        { this.props.example.details ? (\n          <Markdown source={this.props.example.details}/>\n        ) : undefined }\n        { this.props.example.markup ? (\n          <section className={compStyles.exampleContainer}>\n            <div className={compStyles.example} dangerouslySetInnerHTML={{\n              __html: this.props.example.markup\n            }}/>\n          <Markup>{this.props.example.markup}</Markup>\n        </section>\n        ) : undefined }\n      </article>\n    )\n  }\n}\n\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  static async getInitialProps() {\n    const node_env = process.env.NODE_ENV;\n    return { node_env };\n  }\n  render() {\n    const componentStatus = this.props.pageData.status || \"Contribution\";\n    return (\n      <div style={{overflow: 'hidden'}} className={styles.pageContainer}>\n        <Helmet>\n          <meta name=\"Description\" content={this.props.pageData.description}/>\n          <title> {this.props.pageData.name} - Spectrum CSS</title>\n          <style>{`${this.props.pageData.peerCSS}${this.props.pageData.indexCSS}`}</style>\n        </Helmet>\n        <PageHeader title={this.props.pageData.name}/>\n        <table className={compStyles.detailsTable}>\n          <tbody>\n            <tr>\n              <th className=\"spectrum-Body--secondary\">Component status</th>{/*TODO: replace with react-spectrum typography components*/}\n              <td>\n                <Status status={componentStatus}/>\n              </td>\n            </tr>\n            <tr>\n              <th className=\"spectrum-Body--secondary\">Last released</th>\n              <td>October 8, 2019</td>\n            </tr>\n            <tr>\n              <th className=\"spectrum-Body--secondary\">Current version</th>\n              <td>{this.props.pageData.packageName}@{this.props.pageData.packageVersion}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div className={compStyles.resourceCards}>\n          <ResourceCard\n            type=\"Spectrum\"\n            url=\"#\"\n            title=\"View guidelines\"\n            subTitle=\"Spectrum\"\n          />\n          <ResourceCard\n            type=\"GitHub\"\n            url={`https://github.com/adobe/spectrum-css/tree/master/components/${this.props.pageData.packageSlug}`}\n            title=\"View repository\"\n            subTitle=\"Github\"\n          />\n          <ResourceCard\n            type=\"NPM\"\n            url={`https://www.npmjs.com/package/${this.props.pageData.packageName}`}\n            title=\"View package\"\n            subTitle=\"NPM\"\n          />\n        </div>\n      { this.props.pageData.description ? (\n        <Section title={'Usage notes'}>\n          <Markdown source={this.props.pageData.description}/>\n        </Section>\n      ) : undefined }\n      <Section title={'Variants'}>\n        {this.props.pageData.examples.map(function(example, index) {\n          example.status = example.status || componentStatus;\n          return(\n            <Variant key={`${example.id}-${index}`} example={example}/>\n          )\n        }, this)}\n        </Section>\n      </div>\n    );\n  }\n}\nPage.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const pageData = await loadData(id);\n  return { pageData: pageData.default };\n};\nexport default withRouter(Page);\n"],"mappings":"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","sourceRoot":""}