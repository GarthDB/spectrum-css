{"version":3,"file":"static/webpack/static/development/pages/_app.js.457a1dcda85f87169d35.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Sidebar from '../components/Sidebar';\nimport Provider from '@react/react-spectrum/Provider';\nimport Select from '@react/react-spectrum/Select';\nimport FieldLabel from '@react/react-spectrum/FieldLabel';\nimport styles from '../css/main.scss';\nimport {withRouter, Router} from 'next/router';\n\nimport '@adobe/spectrum-css/dist/vars/spectrum-dark-unique.css';\nimport '@adobe/spectrum-css/dist/vars/spectrum-darkest-unique.css';\nimport '@adobe/spectrum-css/dist/vars/spectrum-light-unique.css';\nimport '@adobe/spectrum-css/dist/vars/spectrum-lightest-unique.css';\nimport '@adobe/spectrum-css/dist/vars/spectrum-large-unique.css';\n\nimport classNames from 'classnames';\nimport {Helmet} from \"react-helmet\";\n\n//import regeneratorRuntime from \"regenerator-runtime\";\n\n\nclass Layout extends React.Component {\n  render() {\n    const {children} = this.props\n    return <div className={classNames('afg-container-fluid', styles.mainContainer)}\n                style={{minHeight: '100vh', boxSizing: 'border-box'}}>{children}</div>\n  }\n}\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: 'medium',\n      theme: 'light'\n    };\n    Router.events.on('routeChangeComplete', () => {\n      digitalData._set('page.pageInfo.siteSection', `${arguments[0].router.query.id} Page`);\n      digitalData._set('page.pageInfo.language', 'en-US');\n      digitalData._set('page.pageInfo.geoRegion', 'US');\n      digitalData._set('page.pageInfo.legacyMarketSegment', 'com');\n      _satellite.track('state', {digitalData: digitalData._snapshot()});\n    });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    this.updateTheme();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  updateDimensions = () => {\n    this.setState((state, props) => {\n      return {\n        scale: window.innerWidth < 768 ? 'large' : 'medium'\n      }\n    });\n  }\n  updateTheme = (e = 'light') => {\n    this.setState((state, props) => {\n      return {\n        theme: e\n      }\n    })\n  }\n\n  render() {\n    const {Component, pageProps} = this.props\n    //console.log(pageProps);\n    return (\n\n      <div className={`spectrum--${this.state.theme}`}>\n\n        <Helmet>\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" key=\"viewport\"/>\n          <link rel=\"icon\" type=\"image/x-icon\" href={`${process.env.BACKEND_URL}/static/favicon.ico`}/>\n          <link type=\"text/css\" rel=\"stylesheet\"\n                href=\"https://wwwimages2.adobe.com/etc/beagle/public/globalnav/adobe-globalnav/latest/adobe-globalnav.min.css\"/>\n        </Helmet>\n        <Provider theme={this.state.theme} scale={this.state.scale} typekitId=\"uma8ayv\">\n          <div className={styles.flexContainer}>\n            <Sidebar {...pageProps}/>\n            <Layout>\n              <div style={{display: 'flex'}}>\n                <FieldLabel label=\"Theme\" labelFor=\"theme-selector\" position=\"left\">\n                  <Select\n                    onChange={this.updateTheme}\n                    id=\"theme-selector\"\n                    aria-label=\"Theme selector\"\n                    options={[\n                      {label: 'Lightest', value: 'lightest'},\n                      {label: 'Light', value: 'light'},\n                      {label: 'Dark', value: 'dark'},\n                      {label: 'Darkest', value: 'darkest'}\n                    ]}\n                    defaultValue=\"light\"\n                    quiet\n                    style={{marginRight: '37px'}}\n                  />\n                </FieldLabel>\n                <FieldLabel label=\"Scale\" labelFor=\"theme-selector\" position=\"left\">\n                  <Select\n                    onChange={e => {\n                      this.setState((state, props) => {\n                        return {\n                          scale: e\n                        }\n                      })\n                      console.log(e);\n                    }\n                    }\n                    aria-label=\"Scale selector\"\n                    options={[\n                      {label: 'Medium', value: 'medium'},\n                      {label: 'Large', value: 'large'}\n                    ]}\n                    quiet\n                  />\n                </FieldLabel>\n              </div>\n              <Component {...pageProps}/>\n            </Layout>\n          </div>\n        </Provider>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(MyApp)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AALA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AACA;AADA;AAGA;AACA;AACA;AA5BA;AA4BA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAjCA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAZA;AAaA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAieA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAjGA;AACA;AAmGA;;;;A","sourceRoot":""}